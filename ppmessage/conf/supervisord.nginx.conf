; Sample supervisor config file.
;
; For more information on the config file, please see:
; http://supervisord.org/configuration.html
;
; Note: shell expansion ("~" or "$HOME") is not supported.  Environment
; variables can be expanded using this syntax: "%(ENV_HOME)s".

;[unix_http_server]
;file=/tmp/supervisor.sock   ; (the path to the socket file)
;chmod=0700                 ; socket file mode (default 0700)
;chown=nobody:nogroup       ; socket file uid:gid owner
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[inet_http_server]         ; inet (TCP) server disabled by default
port=127.0.0.1:9001        ; (ip_address:port specifier, *:port for all iface)
;username=user              ; (default is no username (open server))
;password=123               ; (default is no password (open server))

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)
;umask=022                   ; (process file creation umask;default 022)
;user=chrism                 ; (default is current user, required if root)
;identifier=supervisor       ; (supervisord identifier, default is 'supervisor')
;directory=/tmp              ; (default is not to cd during start)
;nocleanup=true              ; (don't clean up tempfiles at start;default false)
;childlogdir=/tmp            ; ('AUTO' child log dir, default $TEMP)
;environment=KEY="value"     ; (key value pairs to add to environment)
;strip_ansi=false            ; (strip ansi escape codes in logs; def. false)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
;serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket
serverurl=http://127.0.0.1:9001 ; use an http:// url to specify an inet socket
;username=chris              ; should be same as http_username if set
;password=123                ; should be same as http_password if set
;prompt=mysupervisor         ; cmd line prompt (default "supervisor")
;history_file=~/.sc_history  ; use readline history if available

; The below sample program section shows all possible program subsection values,
; create one or more 'real' program: sections to be able to control them under
; supervisor.

;[program:theprogramname]
;command=/bin/cat              ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=999                  ; the relative start priority (default 999)
;autostart=true                ; start at supervisord start (default: true)
;autorestart=unexpected        ; whether/when to restart (default: unexpected)
;startsecs=1                   ; number of secs prog must stay running (def. 1)
;startretries=3                ; max # of serial start failures (default 3)
;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups=10     ; # of stderr logfile backups (default 10)
;stderr_capture_maxbytes=1MB   ; number of bytes in 'capturemode' (default 0)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions (def no adds)
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample eventlistener section shows all possible
; eventlistener subsection values, create one or more 'real'
; eventlistener: sections to be able to handle event notifications
; sent by supervisor.

;[eventlistener:theeventlistenername]
;command=/bin/eventlistener    ; the program (relative uses PATH, can take args)
;process_name=%(program_name)s ; process_name expr (default %(program_name)s)
;numprocs=1                    ; number of processes copies to start (def 1)
;events=EVENT                  ; event notif. types to subscribe to (req'd)
;buffer_size=10                ; event buffer queue size (default 10)
;directory=/tmp                ; directory to cwd to before exec (def no cwd)
;umask=022                     ; umask for process (default None)
;priority=-1                   ; the relative start priority (default -1)
;autostart=true                ; start at supervisord start (default: true)
;autorestart=unexpected        ; whether/when to restart (default: unexpected)
;startsecs=1                   ; number of secs prog must stay running (def. 1)
;startretries=3                ; max # of serial start failures (default 3)
;exitcodes=0,2                 ; 'expected' exit codes for process (default 0,2)
;stopsignal=QUIT               ; signal used to kill process (default TERM)
;stopwaitsecs=10               ; max num secs to wait b4 SIGKILL (default 10)
;stopasgroup=false             ; send stop signal to the UNIX process group (default false)
;killasgroup=false             ; SIGKILL the UNIX process group (def false)
;user=chrism                   ; setuid to this UNIX account to run the program
;redirect_stderr=true          ; redirect proc stderr to stdout (default false)
;stdout_logfile=/a/path        ; stdout log path, NONE for none; default AUTO
;stdout_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stdout_logfile_backups=10     ; # of stdout logfile backups (default 10)
;stdout_events_enabled=false   ; emit events on stdout writes (default false)
;stderr_logfile=/a/path        ; stderr log path, NONE for none; default AUTO
;stderr_logfile_maxbytes=1MB   ; max # logfile bytes b4 rotation (default 50MB)
;stderr_logfile_backups        ; # of stderr logfile backups (default 10)
;stderr_events_enabled=false   ; emit events on stderr writes (default false)
;environment=A="1",B="2"       ; process environment additions
;serverurl=AUTO                ; override serverurl computation (childutils)

; The below sample group section shows all possible group values,
; create one or more 'real' group: sections to create "heterogeneous"
; process groups.

;[group:thegroupname]
;programs=progname1,progname2  ; each refers to 'x' in [program:x] definitions
;priority=999                  ; the relative start priority (default 999)

; The [include] section can just contain the "files" setting.  This
; setting can list multiple files (separated by whitespace or
; newlines).  It can also contain wildcards.  The filenames are
; interpreted as relative to this file.  Included files *cannot*
; include files themselves.

;[include]
;files = relative/directory/*.ini

[group:ppmessage-api]
programs=ppmessage-api-8922
directory=/tmp

[group:ppmessage-dispatcher]
programs=ppmessage-dispatcher-8923
directory=/tmp

[group:ppmessage-download]
programs=ppmessage-download-8924
directory=/tmp

[group:ppmessage-ppkefu]
programs=ppmessage-ppkefu-8927
directory=/tmp

[group:ppmessage-upload]
programs=ppmessage-upload-8928
directory=/tmp

[group:ppmessage-message]
programs=ppmessage-message-1883
directory=/tmp

[group:ppmessage-cache]
programs=ppmessage-cache-8929
directory=/tmp

[group:ppmessage-pcsocket]
programs=ppmessage-pcsocket-8931
directory=/tmp

[group:ppmessage-iospush]
programs=ppmessage-iospush-8932
directory=/tmp

[group:ppmessage-monitor]
programs=ppmessage-monitor-8937
directory=/tmp

[group:ppmessage-send]
programs=ppmessage-send-8938
directory=/tmp

[group:ppmessage-mqttpush]
programs=ppmessage-mqttpush-8939
directory=/tmp

[group:ppmessage-gcmpush]
programs=ppmessage-gcmpush-8940
directory=/tmp

[group:ppmessage-rqworker]
programs=ppmessage-rqworker
directory=/tmp

[program:ppmessage-api-8922]
command=python -m ppmessage.backend.api --port=203%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-dispatcher-8923]
command=python -m ppmessage.backend.dispatcher
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-download-8924]
command=python -m ppmessage.backend.download --port=201%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-ppkefu-8927]
command=python -m ppmessage.backend.ppkefu --port=204%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-upload-8928]
command=python -m ppmessage.backend.upload --port=202%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-cache-8929]
priority=1
command=python -m ppmessage.backend.cache
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-message-1883]
command=python -m ppmessage.backend.message
priority=2
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-pcsocket-8931]
command=python -m ppmessage.backend.pcsocket --port=211%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-iospush-8932]
command=python -m ppmessage.backend.iospush
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-ppcom-8934]
command=python -m ppmessage.backend.ppcom --port=210%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-monitor-8937]
command=python -m ppmessage.backend.monitor --port=212%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
priority=1
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-send-8938]
command=python -m ppmessage.backend.send
priority=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-mqttpush-8939]
command=python -m ppmessage.backend.mqttpush
priority=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-gcmpush-8940]
command=python -m ppmessage.backend.gcmpush
priority=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-ppauth-8943]
command=python -m ppmessage.backend.ppauth --port=214%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
priority=1
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-ppconsole-user-8944]
command=python -m ppmessage.backend.ppconsole-user --port=215%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
priority=1
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-ppconsole-admin-8945]
command=python -m ppmessage.backend.ppconsole-admin --port=216%(process_num)02d
process_name=%(program_name)s-%(process_num)02d
priority=1
numprocs=1
directory=/tmp
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

[program:ppmessage-rqworker]
command=rqworker
priority=1
directory=%(here)s/../worker
stopsignal=TERM
autostart=true
autorestart=true
redirect_stderr=true
stdout_logfile=/usr/local/var/log/%(program_name)s.log

